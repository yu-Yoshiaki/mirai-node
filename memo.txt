# マンダラチャート作成サービス 要件定義

## 概要
OpenAIのAPIを活用して、マンダラチャートを自動生成・編集できるWebアプリケーション

## 主要機能

### 1. マンダラチャート生成機能
- 中心テーマを入力すると、AIが8つの関連テーマを自動生成
- 各サブテーマに対してさらに8つの具体的な項目を生成
- 生成された内容の編集が可能
- 日本語・英語両対応

### 2. ニューロン型マインドマップ機能
- マンダラチャートの各要素を自由に配置可能なニューロン型表示
- ドラッグ＆ドロップによる要素の移動
- 要素間の関連性を線で表現
- 関連性の強さを線の太さで表現
- ズーム機能とパン機能
- アニメーションによるスムーズな表示切替

### 3. 保存・共有機能
- 作成したマンダラチャートをローカルストレージに保存
- マンダラチャートのエクスポート機能（JSON形式）
- マンダラチャートのインポート機能

### 4. UI/UX
- 3×3のグリッドレイアウトでマンダラチャートを表示
- レスポンシブデザイン対応
- ダークモード/ライトモード切り替え
- ローディング表示
- エラーハンドリング

## ファイル構成
src/
├── components/
│ ├── MandalaChart.tsx # マンダラチャートのメインコンポーネント
│ ├── NeuronMap.tsx    # ニューロン型マインドマップコンポーネント
│ └── MandalaTest.tsx  # テスト用コンポーネント
├── store/
│ └── useMandalaStore.ts # Zustandによる状態管理
├── utils/
│ ├── mandala.ts # マンダラチャート関連のユーティリティ
│ ├── mandalaOpenai.ts # OpenAI API連携処理
│ ├── mandalaTest.ts # テストユーティリティ
│ ├── openai.ts # OpenAI API基本設定
│ └── openaiConfig.ts # OpenAI設定値
└── App.tsx # メインアプリケーション


## 使用技術・ライブラリ

### フレームワーク・ライブラリ
- React
- TypeScript
- Zustand (状態管理)
- Chakra UI (UIコンポーネント)
- OpenAI API (GPT-4)
- React Icons
- React Router DOM
- React Flow (ニューロン型マインドマップの実装)
- D3.js (グラフ描画)

### 開発環境
- Vite
- ESLint
- Prettier

## 環境変数
VITE_OPENAI_API_KEY= # OpenAI APIキー
VITE_OPENAI_MODEL= # 使用するモデル名（例：gpt-4-turbo-preview）


## データ構造

### マンダラチャートの型定義

typescript
interface MandalaNode {
id: string;
content: string;
children?: MandalaNode[];
position?: { x: number; y: number }; // ニューロン型表示用の座標
connections?: Array<{
targetId: string;
strength: number; // 関連性の強さ（0-1）
}>;
}
interface MandalaChart {
id: string;
centerTheme: MandalaNode;
createdAt: Date;
updatedAt: Date;
}

## エラーハンドリング
- API通信エラー
- 入力バリデーション
- レート制限対応
- タイムアウト処理

## 今後の拡張性
- ユーザー認証機能
- クラウドでの保存機能
- 複数のAIモデル選択機能
- テンプレート機能
- 画像出力機能
- コラボレーション機能

## パフォーマンス要件
- 初期ロード時間: 3秒以内
- API応答時間: 5秒以内
- モバイル対応（レスポンシブ）